// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyProject.Domains.Data;

#nullable disable

namespace MyProject.Domains.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250703203411_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyProject.Domains.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DailyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlateNumber")
                        .IsUnique();

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Chevrolet",
                            DailyRate = 250m,
                            Model = "Lanos",
                            Notes = "عداد 170,000 كم",
                            PlateNumber = "س ل ج 1234",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Toyota",
                            DailyRate = 450m,
                            Model = "Corolla 2015",
                            Notes = "تكييف ممتاز",
                            PlateNumber = "ط ي ر 7896",
                            Status = 0
                        });
                });

            modelBuilder.Entity("MyProject.Domains.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrivingLicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LicenseExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenseImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NationalId")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2027, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenseNumber = "DL2023001",
                            FullName = "أحمد علي",
                            LicenseExpiryDate = new DateTime(2027, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NationalId = "29805251234567",
                            PhoneNumber = "01012345678"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2027, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenseNumber = "DL2024005",
                            FullName = "محمد سمير",
                            LicenseExpiryDate = new DateTime(2026, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NationalId = "29910101555666",
                            PhoneNumber = "01234567890"
                        });
                });

            modelBuilder.Entity("MyProject.Domains.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 300m,
                            CarId = 1,
                            CreatedAt = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "تغيير زيت"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 200m,
                            CarId = 2,
                            CreatedAt = new DateTime(2025, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "بنزين 92"
                        });
                });

            modelBuilder.Entity("MyProject.Domains.Penalty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RentalId");

                    b.ToTable("Penalties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100m,
                            CreatedAt = new DateTime(2027, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reason = "مخالفة ركن في الممنوع",
                            RentalId = 1
                        });
                });

            modelBuilder.Entity("MyProject.Domains.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("DailyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DamageCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DelayCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FuelCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitialFuelLevel")
                        .HasColumnType("int");

                    b.Property<int>("InitialOdometer")
                        .HasColumnType("int");

                    b.Property<decimal>("RemainingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ReturnedFuelLevel")
                        .HasColumnType("int");

                    b.Property<int?>("ReturnedOdometer")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountPaid = 250m,
                            CarId = 1,
                            CreatedAt = new DateTime(2027, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            DailyRate = 250m,
                            DamageCharge = 0m,
                            DelayCharge = 0m,
                            EndDate = new DateTime(2025, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCharge = 50m,
                            InitialFuelLevel = 2,
                            InitialOdometer = 170000,
                            RemainingAmount = 0m,
                            ReturnedFuelLevel = 1,
                            ReturnedOdometer = 170300,
                            StartDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalAmount = 500m
                        });
                });

            modelBuilder.Entity("MyProject.Domains.Expense", b =>
                {
                    b.HasOne("MyProject.Domains.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("MyProject.Domains.Penalty", b =>
                {
                    b.HasOne("MyProject.Domains.Rental", "Rental")
                        .WithMany("Penalties")
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("MyProject.Domains.Rental", b =>
                {
                    b.HasOne("MyProject.Domains.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.Domains.Customer", "Customer")
                        .WithMany("Rentals")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MyProject.Domains.Customer", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("MyProject.Domains.Rental", b =>
                {
                    b.Navigation("Penalties");
                });
#pragma warning restore 612, 618
        }
    }
}
